# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                           controllers.Application.index
GET     /test                                       controllers.Application.test

# Auth
POST    /v1/sendSmsCode                             controllers.AuthController.sendSmsCode
POST    /v1/authenticate/mobile                     controllers.AuthController.mobileAuthenticate
POST    /v1/authenticate/:provider                  controllers.AuthController.socialAuthenticate(provider: String)
GET     /v1/account/list                            controllers.AuthController.getLinkedAccounts
POST    /v1/account/link/:provider                  controllers.AuthController.linkSocialAccount(provider: String)
DELETE  /v1/account/link/:provider                  controllers.AuthController.unlinkSocialAccount(provider: String)
POST    /v1/account/link/mobile                     controllers.AuthController.linkMobileAccount

# Feed
GET     /v1/homefeeds                               controllers.FeedController.getHomeFeeds(ts: Option[String] ?= None)

# User
GET     /v1/user/$id<[0-9]+>                        controllers.UserController.getInfo(id: Long)
POST    /v1/user/login                              controllers.AuthController.mobileAuthenticate
PUT     /v1/user/$id<[0-9]+>/refreshToken           controllers.AuthController.refreshSessionToken(id: Long)
PUT     /v1/user/nickname                           controllers.UserController.updateNickname()
PUT     /v1/user/avatar                             controllers.UserController.updateAvatar()
PUT     /v1/user/cover                              controllers.UserController.updateCover()
GET     /v1/user/suggest                            controllers.UserController.suggestTags()
GET     /v1/user/$id<[0-9]+>/posts/$pg<[0-9]+>      controllers.UserController.getPostsForUser(id: Long, pg: Int)
GET     /v1/user/$id<[0-9]+>/follows/$pg<[0-9]+>    controllers.UserController.getFriends(id: Long, pg: Int)
GET     /v1/user/$id<[0-9]+>/fans/$pg<[0-9]+>       controllers.UserController.getFollowers(id: Long, pg: Int)
POST    /v1/user/$id<[0-9]+>/follow                 controllers.UserController.follow(id: Long)
DELETE  /v1/user/$id<[0-9]+>/follow                 controllers.UserController.unFollow(id: Long)
POST    /v1/user/$id<[0-9]+>/block                  controllers.UserController.block(id: Long)
DELETE  /v1/user/$id<[0-9]+>/block                  controllers.UserController.unBlock(id: Long)

# Post
GET     /v1/post/uploadToken                        controllers.PostController.getQiniuUploadToken
POST    /v1/post                                    controllers.PostController.publishPost
DELETE  /v1/post/$id<[0-9]+>                        controllers.PostController.deletePost(id: Long)
GET     /v1/post/$id<[0-9]+>                        controllers.PostController.getPost(id: Long)
GET     /v1/post/$id<[0-9]+>/marks/$pg<[0-9]+>      controllers.PostController.getPostMarks(id: Long, pg: Int)
POST    /v1/post/$id<[0-9]+>/mark                   controllers.PostController.addMark(id: Long)
POST    /v1/post/$id<[0-9]+>/report                 controllers.PostController.report(id: Long)

# Mark
POST    /v1/mark/$id<[0-9]+>/like                   controllers.MarkController.like(id: Long)
DELETE  /v1/mark/$id<[0-9]+>/like                   controllers.MarkController.unlike(id: Long)
GET     /v1/mark/$id<[0-9]+>/likes                  controllers.MarkController.getLikes(id: Long)

# Comment
POST    /v1/mark/$id<[0-9]+>/comment                controllers.CommentController.commentMark(id: Long)
DELETE  /v1/comment/$id<[0-9]+>                     controllers.CommentController.deleteCommentFromMark(id: Long)
GET     /v1/mark/$id<[0-9]+>/comment                controllers.CommentController.getCommentsForMark(id: Long)

# Search
GET     /v1/tag/hot                                 controllers.SearchController.hotTags
GET     /v1/tag/guess/:tag                          controllers.SearchController.autoComplete(tag: String)
GET     /v1/tag/search/:tag/:pg                     controllers.SearchController.searchTag(tag: String, pg: Int)
GET     /v1/search/tag/:tag/:pg                     controllers.SearchController.searchTagV2(tag: String, pg: Int)

#Notification
GET     /v1/notification                            controllers.NotificationController.getNotifications(ts: Option[Long] ?= None)
GET     /v1/notification/count                      controllers.NotificationController.notificationCount

#Info
POST    /v1/feedback                                controllers.InfoController.feedback
POST    /v1/installation                            controllers.InfoController.installation