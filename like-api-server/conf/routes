# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                           controllers.Application.index
GET     /test                                       controllers.Application.test
GET     /status                                     controllers.Application.status

# Auth
POST    /v1/sendSmsCode                             controllers.AuthController.sendSmsCode
POST    /v1/authenticate/mobile                     controllers.AuthController.mobileAuthenticateViaAvos
POST    /v1/authenticate/mobile/mob                 controllers.AuthController.mobileAuthenticateViaMobIOS
POST    /v1/authenticate/mobile/ios                 controllers.AuthController.mobileAuthenticateViaMobIOS
POST    /v1/authenticate/mobile/android             controllers.AuthController.mobileAuthenticateViaMobAndroid
POST    /v1/authenticate/:provider                  controllers.AuthController.socialAuthenticate(provider: String)
PUT     /v1/user/$id<[0-9]+>/refreshToken           controllers.AuthController.refreshSessionToken(id: Long)
GET     /v1/account/list                            controllers.AuthController.getLinkedAccounts
POST    /v1/account/link/mobile                     controllers.AuthController.linkMobileAccount
POST    /v1/account/link/mobile/mob                 controllers.AuthController.linkMobileAccountViaMob
POST    /v1/account/link/:provider                  controllers.AuthController.linkSocialAccount(provider: String)
DELETE  /v1/account/link/:provider                  controllers.AuthController.unlinkSocialAccount(provider: String)


# Welcome
GET     /v1/welcome/tags                            controllers.UserController.getRecommendTags
POST    /v1/welcome/preference                      controllers.UserController.choosePreferTags


# Feed
GET     /v1/homefeeds                               controllers.FeedController.getHomeFeedsV1(ts: Option[Long] ?= None)
GET     /v1/friendfeeds                             controllers.FeedController.getFollowingFeeds(ts: Option[Long] ?= None)
GET     /v1/homeFeeds                               controllers.FeedController.getHomeFeedsV3(ts: Option[Long] ?= None)
GET     /v1/followingFeeds                          controllers.FeedController.getFollowingFeeds(ts: Option[Long] ?= None)


# User
GET     /v1/user/$id<[0-9]+>                        controllers.UserController.getInfo(id: Long)
PUT     /v1/user/nickname                           controllers.UserController.updateNickname()
PUT     /v1/user/avatar                             controllers.UserController.updateAvatar()
PUT     /v1/user/cover                              controllers.UserController.updateCover()
GET     /v1/user/suggest                            controllers.UserController.suggestTags()
GET     /v1/user/$id<[0-9]+>/posts/$pg<[0-9]+>      controllers.UserController.getPostsForUserV1(id: Long, pg: Int)
GET     /v1/user/$id<[0-9]+>/posts                  controllers.UserController.getPostsForUserV2(id: Long, ts: Option[Long] ?= None)
GET     /v1/user/favorites                          controllers.UserController.getFavoritePostsForUser(ts: Option[Long] ?= None)
GET     /v1/user/$id<[0-9]+>/follows/$pg<[0-9]+>    controllers.UserController.getFollowing(id: Long, pg: Int)
GET     /v1/user/$id<[0-9]+>/fans/$pg<[0-9]+>       controllers.UserController.getFollowers(id: Long, pg: Int)
GET     /v1/user/$id<[0-9]+>/following/$pg<[0-9]+>  controllers.UserController.getFollowing(id: Long, pg: Int)
GET     /v1/user/$id<[0-9]+>/followers/$pg<[0-9]+>  controllers.UserController.getFollowers(id: Long, pg: Int)
POST    /v1/user/$id<[0-9]+>/follow                 controllers.UserController.follow(id: Long)
DELETE  /v1/user/$id<[0-9]+>/follow                 controllers.UserController.unFollow(id: Long)
POST    /v1/user/$id<[0-9]+>/block                  controllers.UserController.block(id: Long)
DELETE  /v1/user/$id<[0-9]+>/block                  controllers.UserController.unBlock(id: Long)

# Post
GET     /v1/post/uploadToken                        controllers.PostController.getQiniuUploadToken
POST    /v1/post                                    controllers.PostController.publishPost
DELETE  /v1/post/$id<[0-9]+>                        controllers.PostController.deletePost(id: Long)
GET     /v1/post/$id<[0-9]+>                        controllers.PostController.getPost(id: Long)
GET     /v1/post/$id<[0-9]+>/marks/$pg<[0-9]+>      controllers.PostController.getPostMarks(id: Long, pg: Int)
POST    /v1/post/$id<[0-9]+>/mark                   controllers.PostController.addMark(id: Long)
POST    /v1/post/$id<[0-9]+>/report                 controllers.PostController.report(id: Long)
POST    /v1/post/$id<[0-9]+>/favorite               controllers.PostController.favorite(id: Long)
DELETE  /v1/post/$id<[0-9]+>/favorite               controllers.PostController.unfavorite(id: Long)

# Mark
GET     /v1/mark/$id<[0-9]+>                        controllers.MarkController.getMark(id: Long)
POST    /v1/mark/$id<[0-9]+>/like                   controllers.MarkController.like(id: Long)
DELETE  /v1/mark/$id<[0-9]+>/like                   controllers.MarkController.unlike(id: Long)
GET     /v1/mark/$id<[0-9]+>/likes                  controllers.MarkController.getLikes(id: Long)
DELETE  /v1/mark/$id<[0-9]+>                        controllers.MarkController.deleteMark(id: Long)

# Comment
POST    /v1/mark/$id<[0-9]+>/comment                controllers.CommentController.commentMark(id: Long)
DELETE  /v1/comment/$id<[0-9]+>                     controllers.CommentController.deleteCommentFromMark(id: Long)
GET     /v1/mark/$id<[0-9]+>/comment                controllers.CommentController.getCommentsForMark(id: Long, order: String ?= "desc")
GET     /v1/mark/$id<[0-9]+>/comments               controllers.CommentController.getCommentsForMark(id: Long, order: String ?= "desc")

# Tag
GET     /v1/tag/:name/subscribe                     controllers.UserController.getUserTag(name: String)
POST    /v1/tag/:id/subscribe                       controllers.UserController.subscribeTag(id: Long)
DELETE  /v1/tag/:id/subscribe                       controllers.UserController.unSubscribeTag(id: Long)

# Search
GET     /v1/tag/hot                                 controllers.SearchController.hotTags
GET     /v1/search/tag/:tag/:pg                     controllers.SearchController.searchTag(tag: String, pg: Int)
GET     /v1/search/tag/:tag                         controllers.SearchController.searchTagV2(tag: String, ts: Option[Long] ?= None)
GET     /v1/explore/hot/user                        controllers.SearchController.hotUsers
GET     /v1/explore/hot                             controllers.SearchController.hotTagsAndUsers
GET     /v1/explore/tag/:tag                        controllers.SearchController.explore(tag: String, ts: Option[Long] ?= None)
GET     /v1/search/topsearch/:name                  controllers.SearchController.searchUsersAndTags(name: String)

#Notification
GET     /v1/notification                            controllers.NotificationController.getNotifications(ts: Option[Long] ?= None)
GET     /v2/notification                            controllers.NotificationController.getNotificationsV2(ts: Option[Long] ?= None)
GET     /v1/notification/count                      controllers.NotificationController.notificationCount

#Info
POST    /v1/feedback                                controllers.InfoController.feedback
POST    /v1/installation                            controllers.InfoController.installation
