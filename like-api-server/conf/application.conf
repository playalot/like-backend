# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret="T>3c<eSjU:Z?RW9D;>fgqx`HAAIddZnbDG5e8edV;U5O;F<LRC@N9ELIGEswFYgb"

# The application languages
# ~~~~~
play.i18n.langs=["zh-CN", "en"]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=app.Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

play.modules.enabled += "modules.SilhouetteModule"

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
slick.dbs.default.driver="slick.driver.MySQLDriver$"
slick.dbs.default.db.driver="com.mysql.jdbc.Driver"
slick.dbs.default.db.url="jdbc:mysql://127.0.0.1/like_api"
slick.dbs.default.db.user="root"
slick.dbs.default.db.password=""

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

redis {
  host=localhost
  port=6379
  auth=""
}

memcached {
  host=localhost
  port=11211
  username=""
  password=""
}

qiniu {
  accesskey="3DGp4OIjw1kge550iNYnwgtpqOybc2iS2gzs_moP"
  secretkey="zuexGmLe-VKTCzWZA28gHvBUlbIXI5VZEqIXOXTN"
  accessKey=${?QINIU_ACCESS_KEY}
  secretKey=${?QINIU_SECRET_KEY}
  bucket=like
  cdn="http://cdn.likeorz.com"
}

avoscloud {
  appId="hs3adghcez49m99vmipb3yo227f4cbojf2x9ccfwbfevmtg3"
  appKey="jfzoeaes9ghkmewxqtfooggcd66x87hxs3sjyu25jca6gxfe"
  apiUrl="https://api.leancloud.cn/1.1"
}

silhouette {
  authenticator {
    headerName="LIKE-SESSION-TOKEN"
    authenticatorExpiry=2592000
  }
}

default {
  avatar="default_avatar.jpg"
  cover="default_cover.jpg"
  tokenExpiry=2592000
}

image {
  avatar {
    large=240
    medium=120
    small=80
    origin=1242
  }
  photo {
    large=1242
    medium=620
    small=180
    origin=1242
  }
}

play.akka.actor-system = "like-api-server"

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  log-dead-letters = off

  actor {
    // Test only!
    serialize-messages = off
    provider = "akka.remote.RemoteActorRefProvider"
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?API_SERVER_HOSTNAME}
      port = 2550
      port = ${?API_SERVER_PORT}
    }
  }

}

event-consumer {
  address = "127.0.0.1:2551,127.0.0.1:2552"
}

push-actor {
  hostname = "127.0.0.1"
  hostname = ${?PUSH_CLUSTER_HOSTNAME}
  port = 2552
  post = ${?PUSH_CLUSTER_POST}
}

# The application DI modules
# ~~~~~
play.modules.enabled += "modules.SilhouetteModule"

play.http.filters="app.Filters"
play.http.errorHandler="app.ErrorHandler"

include "silhouette.conf"
